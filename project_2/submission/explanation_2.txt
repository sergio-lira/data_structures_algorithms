### Explanation

Algorithm:

* For each element in the current path
* Check if the element is a file
* if is a file check if the element ends with the suffix
* if true append the current path to the list of results
* else the current path is a dir
* Enumerate all element in the dir
* recurse for each element in the path

For this problem, I had the choice of generating an iterative or recursive solution. I think that the recursive solution is concise and elegant.

Efficiency:

* Time: O(n) were N is the total number of elements, dir + files. Additionally, for each string the matching of the suffix should be O(s) were the s is the length of the string. So total time complexity is O(n) for the search * O(s) the length of the strings.
* Space:O(n) for each recursive call on a dir uses space, and we are keeping a list of matched elements. O(s) is  the length of the strings