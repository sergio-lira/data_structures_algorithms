### Unsorted Integer Array

Max and Min in an Unsorted Array
In this problem, we will look for the smallest and largest integer from a list of unsorted integers. The code should run in O(n) time. Do not use Python's inbuilt functions to find min and max.

Bonus Challenge: Is it possible to find the max and min in a single traversal?

Notes:

Algorithm
* For each element in the list of unsorted integers
* Assume that the first element is both the min and max
* if the current element is lower than the current min, set current min to the current element
* if the current element is higher than current max, set current max to the current element
* Return min and max

Efficiency:
Time - Overall O(n) - This is the best possible complexity; we have to necessarily iterate all elements to find the min and max values. We could potentially do this in O(1) if we have a max and min heap along with the array. But that triples the space needed to store N integers.

Space - Overall O(1) - constant, we are not using any other structures and only two references to keep the min and max values.
